chrome.runtime.onMessage.addListener(((e,t,r)=>{"teacherList"===e.type&&async function(e,t){e=[...new Set(e)];let r=[];for(let s=0;s<e.length;s++){let n=e[s];console.log("Fetching data for teacher:",n);const a={text:n};try{const e=await fetch("https://v0-proxy-server-git-main-adeebismails-projects.vercel.app/api/graphql",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:'\n    query NewSearch($text: String!) {\n      newSearch {\n        teachers(query: { text: $text, schoolID: "U2Nob29sLTEwMDM=" }) {\n          edges {\n            cursor\n            node {\n              id\n              firstName\n              lastName\n              avgDifficulty\n              avgRating\n              department\n              legacyId\n              numRatings\n              wouldTakeAgainPercent\n              courseCodes {\n                        courseName\n                }\n            }\n          }\n        }\n      }\n    }\n  ',variables:a})}),s=await e.json();console.log("GraphQL Response:",s);let n=s.data.newSearch.teachers.edges;for(let e=0;e<n.length;e++){console.log(n[e].node),courses=n[e].node.courseCodes;for(let s=0;s<courses.length;s++)if(courses[s].courseName.startsWith(t)||courses[s].courseName.startsWith(t.toUpperCase())||courses[s].courseName.startsWith(t.toLowerCase())){r.push(n[e]);break}}}catch(e){console.error("GraphQL Error:",e)}}return r}(e.data,e.departmentCode).then((e=>{chrome.tabs.query({active:!0,currentWindow:!0},(t=>{chrome.tabs.sendMessage(t[0].id,{type:"teacherData",data:e})}))}))})),chrome.webNavigation.onHistoryStateUpdated.addListener((e=>{e.url.includes("courses")&&chrome.scripting.executeScript({target:{tabId:e.tabId},files:["src/content.js"]})}),{url:[{hostContains:"tamu.collegescheduler.com"}]});